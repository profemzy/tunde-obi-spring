apiVersion: v1
kind: ConfigMap
metadata:
  name: tunde-obi-config
data:
  application.properties: |
    spring.application.name=tunde-obi
    management.endpoint.health.show-details=when_authorized
    management.endpoints.web.exposure.include=health,info
    management.endpoint.health.probes.enabled=true
    management.health.livenessState.enabled=true
    management.health.readinessState.enabled=true
    management.endpoint.health.group.website.include=ping,diskSpace,website
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tunde-obi
  labels:
    app: tunde-obi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tunde-obi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: tunde-obi
    spec:
      containers:
      - name: tunde-obi
        image: profemzy/tunde-obi-spring-app:0.0.1-SNAPSHOT
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: JAVA_OPTS
          value: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+ExitOnOutOfMemoryError -Djava.security.egd=file:/dev/./urandom"
        - name: SERVER_SHUTDOWN
          value: "graceful"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: tunde-obi-config
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: tunde-obi
  labels:
    app: tunde-obi
spec:
  selector:
    app: tunde-obi
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tunde-obi
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  rules:
  - host: tunde.ops.infotitans.ca
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tunde-obi
            port:
              number: 80
  tls:
    - hosts:
        - tunde.ops.infotitans.ca
      secretName: tunde-ops-infotitans-secret